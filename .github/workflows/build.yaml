name: build

on:
  push:
    branches: 
    - 'ten'
    - '**/**'
    tags-ignore:
      - 'v**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup environment
      id: setup 
      env:
        toolchain_path: ${{ runner.temp }}/toolchain
        UBUNTU_DEPS: |
          lib32z-dev flex lzop bison gperf g++-multilib python-networkx 
          libc6-dev-i386 libghc-bzlib-dev schedtool 
          pngcrush liblz4-tool optipng maven libswitch-perl 
          policycoreutils ccache libxml-sax-base-perl 
          libxml-simple-perl libgl1-mesa-dev xsltproc 
          libxml2-utils minicom lib32ncurses5-dev libelf-dev pwgen
      run: |
        sudo apt update
        sudo apt install $UBUNTU_DEPS -y
        sudo npm install --global surge
        echo "##[set-output name=toolchain_path;]$toolchain_path"

    - name: Cache toolchain
      id: cache
      uses: actions/cache@v1
      with:
        path: ${{ runner.temp }}/toolchain
        key: ${{ runner.os }}-${{ hashFiles('pancake') }}

    - name: Setup toolchain
      if: steps.cache.outputs.cache-hit != 'true'
      env:
        toolchain_path: ${{ steps.setup.outputs.toolchain_path }}
      run: ./pancake setup

    - name: Configure kernel
      env:
        toolchain_path: ${{ steps.setup.outputs.toolchain_path }}
      run: ./pancake configure
        

    - name: Build kernel
      env:
        toolchain_path: ${{ steps.setup.outputs.toolchain_path }}
      run: ./pancake build

    - name: Pack installer
      env: 
        toolchain_path: ${{ steps.setup.outputs.toolchain_path }}
      run: ./pancake pack

    - name: Upload installer
      uses: actions/upload-artifact@v1
      with:
        name: pancake
        path: flasher/