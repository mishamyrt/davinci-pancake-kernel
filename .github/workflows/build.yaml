name: build

on:
  push:
    branches: 
    - 'ten'
    - '**/**'
    tags-ignore:
      - 'v**'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      telegram_chat_id: "-1001459714859"
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Post build start
      id: telegram
      env:
        telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      run: echo "##[set-output name=message_id;]$(./pancake telegram start)"

    - name: Setup environment
      id: setup 
      env:
        toolchain_path: ${{ runner.temp }}/toolchain
        UBUNTU_DEPS: |
          lib32z-dev flex lzop bison g++-multilib libelf-dev 
          libc6-dev-i386 gperf libxml2-utils policycoreutils 
          liblz4-tool python-networkx libswitch-perl minicom 
          xsltproc libghc-bzlib-dev libxml-simple-perl pwgen 
          lib32ncurses5-dev schedtool
      run: |
        sudo apt update
        sudo apt install $UBUNTU_DEPS -y
        sudo npm install --global surge
        echo "##[set-output name=toolchain_path;]$toolchain_path"

    - name: Setup toolchain
      env:
        toolchain_path: ${{ steps.setup.outputs.toolchain_path }}
      run: ./pancake setup

    - name: Fetch WireGuard
      run: |
        scripts/fetch-latest-wireguard.sh
        git checkout net/wireguard/compat/compat.h

    - name: Configure kernel
      env:
        toolchain_path: ${{ steps.setup.outputs.toolchain_path }}
      run: ./pancake configure

    - name: Build kernel
      env:
        toolchain_path: ${{ steps.setup.outputs.toolchain_path }}
      run: ./pancake build

    - name: Pack installer
      env: 
        toolchain_path: ${{ steps.setup.outputs.toolchain_path }}
      run: ./pancake pack
    
    - name: Post build failure
      if: failure()
      env: 
        message_id: ${{ steps.telegram.outputs.message_id }}
        telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      run: ./pancake telegram fail $message_id
      
    - name: Publish nightly build
      env: 
        toolchain_path: ${{ steps.setup.outputs.toolchain_path }}
        surge_url: "https://pancake-develop.surge.sh"
        surge_token:  ${{ secrets.SURGE_TOKEN }}
      run: ./pancake publish

    - name: Upload installer
      uses: actions/upload-artifact@v1
      with:
        name: pancake
        path: flasher/

    - name: Post build success 
      env: 
        message_id: ${{ steps.telegram.outputs.message_id }}
        telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      run: ./pancake telegram success $message_id
